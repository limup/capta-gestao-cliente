// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using captaApi.Data;

#nullable disable

namespace captaApi.Migrations
{
    [DbContext(typeof(CaptaContext))]
    partial class CaptaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("captaApi.Model.TbCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("Cpf")
                        .HasColumnType("bigint")
                        .HasColumnName("cpf");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sexo");

                    b.HasKey("Id");

                    b.ToTable("tb_cliente", (string)null);
                });

            modelBuilder.Entity("captaApi.Model.TbDominio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClienteIdFk")
                        .HasColumnType("int")
                        .HasColumnName("ClienteId_FK");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ClienteIdFk" }, "IX_tb_dominio_ClienteId_FK");

                    b.ToTable("tb_dominio", (string)null);
                });

            modelBuilder.Entity("captaApi.Model.TbDominio", b =>
                {
                    b.HasOne("captaApi.Model.TbCliente", "ClienteIdFkNavigation")
                        .WithMany("TbDominios")
                        .HasForeignKey("ClienteIdFk");

                    b.Navigation("ClienteIdFkNavigation");
                });

            modelBuilder.Entity("captaApi.Model.TbCliente", b =>
                {
                    b.Navigation("TbDominios");
                });
#pragma warning restore 612, 618
        }
    }
}
